
Exercise 16: Reading And Writing Files
If you did the extra credit from the last exercise you should have seen all sorts of commands (meth- ods/functions) you can give to files. Here’s the list of commands I want you to remember:
• close – Closes the file. Like File->Save.. in your editor.
• read – Reads the contents of the file, you can assign the result to a variable. • readline – Reads just one line of a text file.
• truncate – Empties the file, watch out if you care about the file.
• write(stuff) – Writes stuff to the file.
For now these are the important commands you need to know. Some of them take parameters, but we do not really care about that. You only need to remember that write takes a parameter of a string you want to write to the file.
Let’s use some of this to make a simple little text editor:
1 2 3 4 5 6 7 8 9
10 11 12 13 14 15 16 17
    from sys import argv script, filename = argv
print "We're going to erase %r." % filename print "If you don't want that, hit CTRL-C (^C)." print "If you do want that, hit RETURN."
raw_input("?")
print "Opening the file..."
target = open(filename, 'w')
print "Truncating the file. Goodbye!"
target.truncate()
print "Now I'm going to ask you for three lines."
  49
Learn Python The Hard Way, Release 2.0
     line1 = raw_input("line 1: ") line2 = raw_input("line 2: ") line3 = raw_input("line 3: ")
print "I'm going to write these to the file."
target.write(line1) target.write("\n") target.write(line2) target.write("\n") target.write(line3) target.write("\n")
print "And finally, we close it." target.close()
 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
That’s a large file, probably the largest you have typed in. So go slow, do your checks, and make it run. One trick is to get bits of it running at a time. Get lines 1-8 running, then 5 more, then a few more, etc., until it’s all done and running.
What You Should See
There are actually two things you will see, first the output of your new script:
    $ python ex16.py test.txt
We're going to erase 'test.txt'.
If you don't want that, hit CTRL-C (^C). If you do want that, hit RETURN.
?
Opening the file...
Truncating the file. Goodbye!
Now I'm going to ask you for three lines. line 1: To all the people out there.
line 2: I say I don't like my hair.
line 3: I need to shave it off.
I'm going to write these to the file.
And finally, we close it.
$
 Now, open up the file you made (in my case test.txt) in your editor and check it out. Neat right?
50 Exercise 16: Reading And Writing Files
 
1. If you feel you do not understand this, go back through and use the comment trick to get it squared away in your mind. One simple English comment above each line will help you understand, or at least let you know what you need to research more.
2. Write a script similar to the last exercise that uses read and argv to read the file you just created.
3. There’s too much repetition in this file. Use strings, formats, and escapes to print out line1,
line2, and line3 with just one target.write() command instead of 6.
4. Find out why we had to pass a ’w’ as an extra parameter to open. Hint: open tries to be safe by
making you explicitly say you want to write a file.
5. If you open the file with ’w’ mode, then do you really need the target.truncate()? Go
read the docs for Python’s open function and see if that’s true.
Learn Python The Hard Way, Release 2.0
 Extra Credit
 Extra Credit 51
Learn Python The Hard Way, Release 2.0
  52 Exercise 16: Reading And Writing Files